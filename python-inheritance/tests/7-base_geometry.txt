>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> bg.integer_validator("Oscar", 456785)

>>> bg.integer_validator("Oscar", "Salinas")
Traceback (most recent call last):
...
TypeError: Oscar must be an integer

>>> bg.integer_validator("Oscar", -45)
Traceback (most recent call last):
...
ValueError: Oscar must be greater than 0

>>> bg.integer_validator("Oscar", 0)
Traceback (most recent call last):
...
ValueError: Oscar must be greater than 0

>>> bg.integer_validator("Oscar", 45)

>>> bg.integer_validator("Oscar", [3, 7])
Traceback (most recent call last):
...
TypeError: Oscar must be an integer

>>> bg.integer_validator("Oscar")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("Oscar", None)
Traceback (most recent call last):
..
TypeError: Oscar must be an integer

>>> bg.integer_validator("Oscar", )
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("Oscar", float("NaN"))
Traceback (most recent call last):
...
TypeError: Oscar must be an integer

>>> bg.integer_validator("Oscar", float("inf"))
Traceback (most recent call last):
...
TypeError: Oscar must be an integer

>>> bg.integer_validator("Oscar", 8.45)
Traceback (most recent call last):
...
TypeError: Oscar must be an integer

>>> bg.integer_validator(56, "8.45")
Traceback (most recent call last):
...
TypeError: 56 must be an integer

>>> bg.integer_validator(56, 3456)

>>> bg.integer_validator(None, "8.45")
Traceback (most recent call last):
...
TypeError: None must be an integer

>>> bg.integer_validator(None, 6789)

>>> bg.integer_validator(None, [5])
Traceback (most recent call last):
...
TypeError: None must be an integer
