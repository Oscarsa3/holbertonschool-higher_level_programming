>>> add_integer = __import__('0-add_integer').add_integer

>>> add_integer(1, 2)
3

>>> add_integer(2)
100

>>> add_integer(123456789009876543243567887654, 4567876545671234567890098765432)
4691333334681111111133666653086

>>> add_integer(2.3, 3.4)
5

>>>  add_integer("3")
Traceback (most recent call last):
...
TypeError: a must be an integer


>>> add_integer(2, 4, 7)
Traceback (most recent call last):
...
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

>>> add_integer(False, 7)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer((2, 5), (8, 7, 8))
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(6, [4, 8])
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer({'6': 6})
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(float('and'), 8)
Traceback (most recent call last):
...
ValueError: could not convert string to float: 'and'

>>> add_integer(float("inf"), 1)
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
